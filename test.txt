
  setProvider: [Function (anonymous)],
  currentProvider: [Getter/Setter],
  _requestManager: RequestManager {
    provider: HDWalletProvider {
      walletHdpath: "m/44'/60'/0'/0/",
      wallets: [Object],
      addresses: [Array],
      chainSettings: {},
      engine: [Web3ProviderEngine],
      initialized: [Promise],
      hardfork: 'istanbul'
    },
    providers: {
      WebsocketProvider: [Function: WebsocketProvider],
      HttpProvider: [Function: HttpProvider],
      IpcProvider: [Function: IpcProvider]
    },
    subscriptions: Map(0) {}
  },
  givenProvider: null,
  providers: {
    WebsocketProvider: [Function: WebsocketProvider],
    HttpProvider: [Function: HttpProvider],
    IpcProvider: [Function: IpcProvider]
  },
  _provider: HDWalletProvider {
    walletHdpath: "m/44'/60'/0'/0/",
    wallets: { '0xd686db319a976d3486bb11f9570df45a4c148885': [Wallet] },
    addresses: [ '0xd686db319a976d3486bb11f9570df45a4c148885' ],
    chainSettings: {},
    engine: Web3ProviderEngine {
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: 30,
      _blockTracker: [PollingBlockTracker],
      _ready: [Stoplight],
      currentBlock: null,
      _providers: [Array],
      silent: false,
      _running: true,
      [Symbol(kCapture)]: false
    },
    initialized: Promise { <pending> },
    hardfork: 'istanbul'
  },
  setRequestManager: [Function (anonymous)],
  BatchRequest: [Function: bound Batch],
  extend: [Function: ex] {
    formatters: {
      inputDefaultBlockNumberFormatter: [Function: inputDefaultBlockNumberFormatter],
      inputBlockNumberFormatter: [Function: inputBlockNumberFormatter],
      inputCallFormatter: [Function: inputCallFormatter],
      inputTransactionFormatter: [Function: inputTransactionFormatter],
      inputAddressFormatter: [Function: inputAddressFormatter],
      inputPostFormatter: [Function: inputPostFormatter],
      inputLogFormatter: [Function: inputLogFormatter],
      inputSignFormatter: [Function: inputSignFormatter],
      inputStorageKeysFormatter: [Function: inputStorageKeysFormatter],
      outputProofFormatter: [Function: outputProofFormatter],
      outputBigNumberFormatter: [Function: outputBigNumberFormatter],
      outputTransactionFormatter: [Function: outputTransactionFormatter],
      outputTransactionReceiptFormatter: [Function: outputTransactionReceiptFormatter],
      outputBlockFormatter: [Function: outputBlockFormatter],
      outputLogFormatter: [Function: outputLogFormatter],
      outputPostFormatter: [Function: outputPostFormatter],
      outputSyncingFormatter: [Function: outputSyncingFormatter]
    },
    utils: {
      _fireError: [Function: _fireError],
      _jsonInterfaceMethodToString: [Function: _jsonInterfaceMethodToString],
      _flattenTypes: [Function: _flattenTypes],
      randomHex: [Function: randomHex],
      _: [Function],
      BN: [Function],
      isBN: [Function: isBN],
      isBigNumber: [Function: isBigNumber],
      isHex: [Function: isHex],
      isHexStrict: [Function: isHexStrict],
      sha3: [Function],
      sha3Raw: [Function: sha3Raw],
      keccak256: [Function],
      soliditySha3: [Function: soliditySha3],
      soliditySha3Raw: [Function: soliditySha3Raw],
      encodePacked: [Function: encodePacked],
      isAddress: [Function: isAddress],
      checkAddressChecksum: [Function: checkAddressChecksum],
      toChecksumAddress: [Function: toChecksumAddress],
      toHex: [Function: toHex],
      toBN: [Function: toBN],
      bytesToHex: [Function: bytesToHex],
      hexToBytes: [Function: hexToBytes],
      hexToNumberString: [Function: hexToNumberString],
      hexToNumber: [Function: hexToNumber],
      toDecimal: [Function: hexToNumber],
      numberToHex: [Function: numberToHex],
      fromDecimal: [Function: numberToHex],
      hexToUtf8: [Function: hexToUtf8],
      hexToString: [Function: hexToUtf8],
      toUtf8: [Function: hexToUtf8],
      stripHexPrefix: [Function: stripHexPrefix],
      utf8ToHex: [Function: utf8ToHex],
      stringToHex: [Function: utf8ToHex],
      fromUtf8: [Function: utf8ToHex],
      hexToAscii: [Function: hexToAscii],
      toAscii: [Function: hexToAscii],
      asciiToHex: [Function: asciiToHex],
      fromAscii: [Function: asciiToHex],
      unitMap: [Object],
      toWei: [Function: toWei],
      fromWei: [Function: fromWei],
      padLeft: [Function: leftPad],
      leftPad: [Function: leftPad],
      padRight: [Function: rightPad],
      rightPad: [Function: rightPad],
      toTwosComplement: [Function: toTwosComplement],
      isBloom: [Function: isBloom],
      isUserEthereumAddressInBloom: [Function: isUserEthereumAddressInBloom],
      isContractAddressInBloom: [Function: isContractAddressInBloom],
      isTopic: [Function: isTopic],
      isTopicInBloom: [Function: isTopicInBloom],
      isInBloom: [Function: isInBloom],
      compareBlockNumbers: [Function: compareBlockNumbers]
    },
    Method: [Function: Method]
  },
  clearSubscriptions: [Function (anonymous)],
  options: { address: [Getter/Setter], jsonInterface: [Getter/Setter] },
  handleRevert: [Getter/Setter],
  defaultCommon: [Getter/Setter],
  defaultHardfork: [Getter/Setter],
  defaultChain: [Getter/Setter],
  transactionPollingTimeout: [Getter/Setter],
  transactionConfirmationBlocks: [Getter/Setter],
  transactionBlockTimeout: [Getter/Setter],
  defaultAccount: [Getter/Setter],
  defaultBlock: [Getter/Setter],
  methods: {
    allPairs: [Function: bound _createTxObject],
    '0x1e3dd18b': [Function: bound _createTxObject],
    'allPairs(uint256)': [Function: bound _createTxObject],
    allPairsLength: [Function: bound _createTxObject],
    '0x574f2ba3': [Function: bound _createTxObject],
    'allPairsLength()': [Function: bound _createTxObject],
    createPair: [Function: bound _createTxObject],
    '0xc9c65396': [Function: bound _createTxObject],
    'createPair(address,address)': [Function: bound _createTxObject],
    feeTo: [Function: bound _createTxObject],
    '0x017e7e58': [Function: bound _createTxObject],
    'feeTo()': [Function: bound _createTxObject],
    feeToSetter: [Function: bound _createTxObject],
    '0x094b7415': [Function: bound _createTxObject],
    'feeToSetter()': [Function: bound _createTxObject],
    getPair: [Function: bound _createTxObject],
    '0xe6a43905': [Function: bound _createTxObject],
    'getPair(address,address)': [Function: bound _createTxObject],
    setFeeTo: [Function: bound _createTxObject],
    '0xf46901ed': [Function: bound _createTxObject],
    'setFeeTo(address)': [Function: bound _createTxObject],
    setFeeToSetter: [Function: bound _createTxObject],
    '0xa2e74af6': [Function: bound _createTxObject],
    'setFeeToSetter(address)': [Function: bound _createTxObject]
  },
  events: {
    PairCreated: [Function: bound ],
    '0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9': [Function: bound ],
    'PairCreated(address,address,address,uint256)': [Function: bound ],
    allEvents: [Function: bound ]
  },
  _address: '0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f',
  _jsonInterface: [
    {
      inputs: [Array],
      payable: false,
      stateMutability: 'nonpayable',
      type: 'constructor',
      constant: undefined
    },
    {
      anonymous: false,
      inputs: [Array],
      name: 'PairCreated',
      type: 'event',
      constant: undefined,
      payable: undefined,
      signature: '0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9'
    },
    {
      constant: true,
      inputs: [Array],
      name: 'allPairs',
      outputs: [Array],
      payable: false,
      stateMutability: 'view',
      type: 'function',
      signature: '0x1e3dd18b'
    },
    {
      constant: true,
      inputs: [],
      name: 'allPairsLength',
      outputs: [Array],
      payable: false,
      stateMutability: 'view',
      type: 'function',
      signature: '0x574f2ba3'
    },
    {
      constant: false,
      inputs: [Array],
      name: 'createPair',
      outputs: [Array],
      payable: false,
      stateMutability: 'nonpayable',
      type: 'function',
      signature: '0xc9c65396'
    },
    {
      constant: true,
      inputs: [],
      name: 'feeTo',
      outputs: [Array],
      payable: false,
      stateMutability: 'view',
      type: 'function',
      signature: '0x017e7e58'
    },
    {
      constant: true,
      inputs: [],
      name: 'feeToSetter',
      outputs: [Array],
      payable: false,
      stateMutability: 'view',
      type: 'function',
      signature: '0x094b7415'
    },
    {
      constant: true,
      inputs: [Array],
      name: 'getPair',
      outputs: [Array],
      payable: false,
      stateMutability: 'view',
      type: 'function',
      signature: '0xe6a43905'
    },
    {
      constant: false,
      inputs: [Array],
      name: 'setFeeTo',
      outputs: [],
      payable: false,
      stateMutability: 'nonpayable',
      type: 'function',
      signature: '0xf46901ed'
    },
    {
      constant: false,
      inputs: [Array],
      name: 'setFeeToSetter',
      outputs: [],
      payable: false,
      stateMutability: 'nonpayable',
      type: 'function',
      signature: '0xa2e74af6'
    }
  ]
